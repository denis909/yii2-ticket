<?php

namespace ricco\ticket\models;

use ricco\ticket\Mailer;
use ricco\ticket\Module;
use Yii;

/**
 * This is the model class for table "ticket_body".
 *
 * @property integer      $id
 * @property integer      $id_head
 * @property integer      $is_client
 * @property string       $text
 * @property string       $date
 *
 * @property TicketFile   $file
 * @property TicketHead[] $ticketHeads
 */
class TicketBody extends \yii\db\ActiveRecord
{
    
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%ticket_body}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['text'], 'required'],
            [['text'], 'string'],
            [['date', 'id_head'], 'safe'],
            [['text'], 'filter', 'filter' => 'strip_tags']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('ticket', 'ID'),
            'text' => Yii::t('ticket', 'Text'),
            'date' => Yii::t('ticket', 'Date')
        ];
    }

    /**
     * Перед сохранением указываем имя пользователя который делает ответ
     * Если ответ пишет администратор, делаем соответствующий статус
     *
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        /** @var TicketHead $ticketHead */
        $ticketHead = TicketHead::find()->where("id = " . $this->id_head)->one();

        /**
         * Отправка уведомлений
         */
        if (Yii::$app->ticket->mailSend !== false && $ticketHead->status != TicketHead::STATUS_CLOSED) 
        {
            $userModel = Yii::$app->ticket->userModel;

            (new Mailer())
                ->sendMailDataTicket($ticketHead->topic, $ticketHead->status, $ticketHead->id,
                    $this->text)
                ->setDataFrom(!$this->is_client ? Yii::$app->params['adminEmail'] : $userModel::findOne([
                    'id' => $ticketHead->user_id,
                ])['email'],
                    Yii::$app->ticket->subjectAnswer
                )
                ->senda('mail');
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function getFile()
    {
        return $this->hasMany(TicketFile::class, ['id_body' => 'id']);
    }

    public function getUserName()
    {
        if ($this->is_client)
        {
            return $this->head->user->username;
        }
        else
        {
            return Yii::$app->ticket->supportName;
        }
    }

    public function getHead()
    {
        return $this->hasOne(TicketHead::class, ['id' => 'id_head']);
    }

    public function getFormattedDate()
    {
        return date('Y-m-d H:i', strtotime($this->date));
    }

}